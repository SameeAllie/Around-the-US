!function(){"use strict";var e=class{constructor(e,t){this._form=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._inputList=[],this._buttonElement}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){this._errorELement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorELement.classList.remove(this._errorClass),this._errorELement.textContent=""}_toggleInputError(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}disableSubmitButton(){this._buttonElement.disabled=!0,this._buttonElement.classList.add(this._inactiveButtonClass)}_enableSubmitButton(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1}_toggleButtonState(){this._hasInvalidInput()?this.disableSubmitButton():this._enableSubmitButton()}_setEventListeners(){this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._buttonElement=this._form.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputError(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};class t{constructor(e,t,o){this._text=e.name,this._link=e.link,this._cardSelector=t,this._handleCardClick=o}_setEventListeners(){this._element.querySelector(".card__like-button").addEventListener("click",(()=>this._handleLikeButton())),this._element.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleDeleteButton())),this._element.querySelector(".card__image").addEventListener("click",(()=>this._handleCardClick({name:this._text,link:this._link})))}_handleLikeButton(){this._element.querySelector(".card__like-button").classList.toggle("card__active-button")}_handleDeleteButton(){this._element.remove(),this._element=null}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){this._element=this._getTemplate(),this._setEventListeners();const e=this._element.querySelector(".card__image"),t=this._element.querySelector(".card__title");return e.src=this._link,e.alt=this._text,t.textContent=this._text,this._element}}class o{constructor(e){let{popupSelector:t}=e;var o,n,r;o=this,r=e=>{"Escape"===e.key&&this.closeModalWindow()},(n=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var n=o.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(n="_handleEscClose"))in o?Object.defineProperty(o,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):o[n]=r,this._popupElement=document.querySelector(t)}openModalWindow(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keyup",this._handleEscClose)}closeModalWindow(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keyup",this._handleEscClose)}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",(()=>this.closeModalWindow())),this._popupElement.addEventListener("click",(e=>{e.target.matches(".popup")&&this.closeModalWindow()}))}}class n extends o{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".popup__form"),this._submitCallback=t}_getInputValues(){const e=this._popupForm.querySelectorAll(".popup__input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._popupForm.addEventListener("submit",(()=>{this._submitCallback(this._getInputValues()),this.closeModalWindow()})),super.setEventListeners()}closeModalWindow(){this._popupForm.reset(),super.closeModalWindow()}}document.querySelector(".photo-grid__cards"),document.querySelector(".popup"),document.querySelector(".create-popup");const r=document.querySelector("#profile-popup"),s=document.querySelector("#create-popup"),i=(document.querySelector("#popup__close-button"),document.querySelector(".profile__edit-button")),l=document.querySelector(".profile__add-button"),u=(document.querySelector("#popup__close-edit"),document.querySelector("#popup__close-create"),document.querySelector(".profile__name"),document.querySelector(".profile__title"),document.querySelector("#popup__close-button"),document.querySelector("#preview-popup"),document.querySelector("#title")),a=document.querySelector("#description"),c=(document.querySelector("#name"),document.querySelector("#link"),{inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}),p=new e(c,r),d=new e(c,s);p.enableValidation(),d.enableValidation();const _=new class extends o{openModalWindow(e){let{link:t,name:o}=e;const n=this._popupElement.querySelector(".popup__preview-image"),r=this._popupElement.querySelector(".popup__preview-name");n.src=t,r.alt=o,r.textContent=o,super.openModalWindow()}}({popupSelector:"#preview-popup"});_.setEventListeners();const m=e=>new t(e,"#card-template",(e=>{_.openModalWindow(e)})).getView(),h=new class{constructor(e,t){let{items:o,renderer:n}=e;this._items=o,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this.addItem(t)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:m},".photo-grid__cards");h.renderItems();const S=new n("#profile-popup",(e=>{E.setUserInfo(e.title,e.description)})),b=new n("#create-popup",(e=>{const t=m({name:e.name,link:e.link});h.addItem(t)})),E=new class{constructor(e){let{nameSelector:t,jobSelector:o}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(o)}getUserInfo(){return{name:this._nameElement.textContent,description:this._jobElement.textContent}}setUserInfo(e,t){this._nameElement.textContent=e,this._jobElement.textContent=t}}({nameSelector:".profile__name",jobSelector:".profile__title"});b.setEventListeners(),S.setEventListeners(),l.addEventListener("click",(()=>{b.openModalWindow(),d.disableSubmitButton()})),i.addEventListener("click",(()=>{S.openModalWindow();const e=E.getUserInfo();u.value=e.name,a.value=e.description}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,